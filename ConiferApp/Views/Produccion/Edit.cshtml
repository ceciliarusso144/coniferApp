@model ConiferApp.Models.ProduccionDetalle

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    


    <div class="form-horizontal">
        <h4>Producción detalle</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.Label("Nro producción", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idproduccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idproduccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Fecha", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Línea", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.linea, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.linea, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Coche", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.coche, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.coche, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Legajo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.legajo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.legajo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Hora inicio", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.horainicio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.horainicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Hora fin", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.horafin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.horafin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Controladora", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.controladora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.controladora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-sm btn-success" />
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Volver", "ControlarProduccion")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
